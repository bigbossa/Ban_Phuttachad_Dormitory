import { supabase } from "@/integrations/supabase/client";

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ system_settings ‡πÉ‡∏´‡∏°‡πà
 */
export const updateSystemSettings = async (newSettings: {
  waterRate: number;
  electricityRate: number;
  depositRate: number;
  lateFee?: number;
  floor?: number;
}) => {
  try {
    console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï system_settings...");
    console.log("‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï:", newSettings);

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• system_settings ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const { data: existingSettings, error: checkError } = await supabase
      .from("system_settings")
      .select("id")
      .order("created_at", { ascending: false })
      .limit(1);

    if (checkError) {
      console.error("‚ùå Error checking existing settings:", checkError);
      return { success: false, error: checkError.message };
    }

    const settingsData = {
      water_rate: newSettings.waterRate,
      electricity_rate: newSettings.electricityRate,
      deposit_rate: newSettings.depositRate,
      late_fee: newSettings.lateFee || 5,
      floor: newSettings.floor || 4,
    };

    let result;
    if (existingSettings && existingSettings.length > 0) {
      // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
      const { data, error } = await supabase
        .from("system_settings")
        .update(settingsData)
        .eq("id", existingSettings[0].id)
        .select()
        .single();

      result = { data, error };
    } else {
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
      const { data, error } = await supabase
        .from("system_settings")
        .insert(settingsData)
        .select()
        .single();

      result = { data, error };
    }

    if (result.error) {
      console.error("‚ùå Error updating system settings:", result.error);
      return { success: false, error: result.error.message };
    }

    console.log("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï system_settings ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    console.log("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï:", result.data);

    return {
      success: true,
      message: "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï system_settings ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
      data: result.data,
    };
  } catch (error) {
    console.error("‚ùå Unexpected error in updateSystemSettings:", error);
    return {
      success: false,
      error:
        error instanceof Error ? error.message : "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î",
    };
  }
};

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö deposit_rate ‡πÉ‡∏´‡∏°‡πà
 */
export const updateAllRoomPrices = async (newPrice: number) => {
  try {
    console.log(`üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô ${newPrice} ‡∏ö‡∏≤‡∏ó...`);

    const { data, error } = await supabase
      .from("rooms")
      .update({ price: newPrice })
      .neq("id", "00000000-0000-0000-0000-000000000000"); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏∏‡∏Å‡∏´‡πâ‡∏≠‡∏á

    if (error) {
      console.error("‚ùå Error updating room prices:", error);
      return { success: false, error: error.message };
    }

    console.log("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");

    return {
      success: true,
      message: `‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô ${newPrice} ‡∏ö‡∏≤‡∏ó ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`,
    };
  } catch (error) {
    console.error("‚ùå Unexpected error in updateAllRoomPrices:", error);
    return {
      success: false,
      error:
        error instanceof Error ? error.message : "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î",
    };
  }
};

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏±‡πâ‡∏á system_settings ‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
 */
export const updateSystemAndRoomPrices = async (newSettings: {
  waterRate: number;
  electricityRate: number;
  depositRate: number;
  lateFee?: number;
  floor?: number;
}) => {
  try {
    console.log("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏±‡πâ‡∏á system_settings ‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡πâ‡∏≠‡∏á...");

    // 1. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï system_settings
    const settingsResult = await updateSystemSettings(newSettings);
    if (!settingsResult.success) {
      return settingsResult;
    }

    // 2. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const roomResult = await updateAllRoomPrices(newSettings.depositRate);
    if (!roomResult.success) {
      return roomResult;
    }

    console.log("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏±‡πâ‡∏á system_settings ‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");

    return {
      success: true,
      message: `‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:
        - ‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥: ${newSettings.waterRate} ‡∏ö‡∏≤‡∏ó/‡∏Ñ‡∏ô
        - ‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü: ${newSettings.electricityRate} ‡∏ö‡∏≤‡∏ó/‡∏´‡∏ô‡πà‡∏ß‡∏¢
        - ‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á: ${newSettings.depositRate} ‡∏ö‡∏≤‡∏ó`,
      settingsData: settingsResult.data,
    };
  } catch (error) {
    console.error("‚ùå Unexpected error in updateSystemAndRoomPrices:", error);
    return {
      success: false,
      error:
        error instanceof Error ? error.message : "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î",
    };
  }
};
